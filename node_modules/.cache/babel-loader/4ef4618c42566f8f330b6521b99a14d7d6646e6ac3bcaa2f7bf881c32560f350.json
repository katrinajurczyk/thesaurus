{"ast":null,"code":"var _jsxFileName = \"/Users/katrinajurczyk/Desktop/Repos/thesaurus/thesaurus/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const Errors = {};\n  const [word, setWord] = useState(\"\");\n  const [synonyms, setSynonyms] = useState([]);\n  const apiURL = \"https://api.datamuse.com/words?rel_syn=\";\n  const handleFetchSynonyms = async e => {\n    e.preventDefault();\n    try {\n      const url = apiURL + word;\n      const response = await fetch(url);\n      const synonymData = await response.json();\n      setSynonyms(synonymData);\n    } catch (e) {\n      // console.error(e);\n    }\n    // setWord(input);\n    // API call\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Thesaurus\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleFetchSynonyms,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"word-input\",\n        children: \"Enter word: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"word-input\",\n        value: word,\n        onChange: e => setWord(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: synonyms.map(synonym => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: synonym.word\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"X1h8HCreMmScB4s6v2YEll42oU4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","App","_s","Errors","word","setWord","synonyms","setSynonyms","apiURL","handleFetchSynonyms","e","preventDefault","url","response","fetch","synonymData","json","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","id","value","onChange","target","map","synonym","_c","$RefreshReg$"],"sources":["/Users/katrinajurczyk/Desktop/Repos/thesaurus/thesaurus/src/App.js"],"sourcesContent":["import { useState } from 'react';\nimport './App.css';\n\nfunction App() {\n\n  const Errors = {\n    \n  }\n\n  const [word, setWord] = useState(\"\");\n  const [synonyms, setSynonyms] = useState([]);\n\n  const apiURL = \"https://api.datamuse.com/words?rel_syn=\";\n\n  const handleFetchSynonyms = async (e) => {\n    e.preventDefault();\n    try {\n      const url = apiURL + word;\n      const response = (await fetch(url));\n      const synonymData = await response.json();\n      setSynonyms(synonymData);\n    } catch (e) {\n      // console.error(e);\n    }\n    // setWord(input);\n    // API call\n  }\n\n  return (\n    <div className=\"App\">\n      <h2>Thesaurus</h2>\n      <form onSubmit={handleFetchSynonyms}>\n        <label htmlFor=\"word-input\">Enter word: </label>\n        <input\n          id=\"word-input\"\n          value={word}\n          onChange={(e) => setWord(e.target.value)}\n        ></input>\n        <button>Search</button>\n      </form>\n      <ul>\n        {synonyms.map(synonym => (\n          <li>{synonym.word}</li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAEb,MAAMC,MAAM,GAAG,CAEf,CAAC;EAED,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMU,MAAM,GAAG,yCAAyC;EAExD,MAAMC,mBAAmB,GAAG,MAAOC,CAAC,IAAK;IACvCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI;MACF,MAAMC,GAAG,GAAGJ,MAAM,GAAGJ,IAAI;MACzB,MAAMS,QAAQ,GAAI,MAAMC,KAAK,CAACF,GAAG,CAAE;MACnC,MAAMG,WAAW,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MACzCT,WAAW,CAACQ,WAAW,CAAC;IAC1B,CAAC,CAAC,OAAOL,CAAC,EAAE;MACV;IAAA;IAEF;IACA;EACF,CAAC;EAED,oBACEV,OAAA;IAAKiB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBlB,OAAA;MAAAkB,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClBtB,OAAA;MAAMuB,QAAQ,EAAEd,mBAAoB;MAAAS,QAAA,gBAClClB,OAAA;QAAOwB,OAAO,EAAC,YAAY;QAAAN,QAAA,EAAC;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAChDtB,OAAA;QACEyB,EAAE,EAAC,YAAY;QACfC,KAAK,EAAEtB,IAAK;QACZuB,QAAQ,EAAGjB,CAAC,IAAKL,OAAO,CAACK,CAAC,CAACkB,MAAM,CAACF,KAAK;MAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnC,CAAC,eACTtB,OAAA;QAAAkB,QAAA,EAAQ;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnB,CAAC,eACPtB,OAAA;MAAAkB,QAAA,EACGZ,QAAQ,CAACuB,GAAG,CAACC,OAAO,iBACnB9B,OAAA;QAAAkB,QAAA,EAAKY,OAAO,CAAC1B;MAAI;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CACvB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV;AAACpB,EAAA,CA5CQD,GAAG;AAAA8B,EAAA,GAAH9B,GAAG;AA8CZ,eAAeA,GAAG;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}